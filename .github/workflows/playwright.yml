name: UI Automation with VPN

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Test environment"
        required: true
        default: "stag"
        type: choice
        options:
          - stag
          - prod
          - dev

jobs:
  playwright-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install WireGuard
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard-tools

      - name: Setup WireGuard VPN
        env:
          WG_PRIVATE_KEY: ${{ secrets.WG_PRIVATE_KEY }}
          WG_PRESHARED_KEY: ${{ secrets.WG_PRESHARED_KEY }}
        run: |
          # Create WireGuard configuration
          sudo tee /etc/wireguard/wg0.conf > /dev/null <<EOF
          [Interface]
          PrivateKey = ${WG_PRIVATE_KEY}
          Address = 10.0.0.10/24
          DNS = 1.1.1.1

          [Peer]
          PublicKey = DdlxB8CIQ72tZ6bWe3NU/ZC50SKIqKgmiHusPM4liAI=
          PresharedKey = ${WG_PRESHARED_KEY}
          AllowedIPs = 0.0.0.0/0, ::/0
          PersistentKeepalive = 25
          Endpoint = vpn.juliusworks.com:33048
          EOF

          # Set proper permissions
          sudo chmod 600 /etc/wireguard/wg0.conf

          # Start WireGuard interface
          sudo wg-quick up wg0

          # Verify connection
          echo "WireGuard status:"
          sudo wg show

          # Test connectivity
          echo "Testing VPN connectivity..."
          ping -c 3 1.1.1.1 || echo "Ping test failed"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run Playwright tests
        env:
          TEST_ENV: ${{ github.event.inputs.environment }}
        run: |
          echo "Running tests against $TEST_ENV environment"
          npx playwright test --project=chromium
        continue-on-error: false

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-results-${{ github.event.inputs.environment }}
          path: |
            playwright-report/
            test-results/
          retention-days: 7

      - name: Cleanup WireGuard
        if: always()
        run: |
          sudo wg-quick down wg0 || echo "WireGuard interface already down"
