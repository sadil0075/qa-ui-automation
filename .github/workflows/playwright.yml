name: UI Automation Stag & Preview

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Test environment"
        required: true
        default: "stag"
        type: choice
        options:
          - stag
          #- preview

jobs:
  playwright-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install WireGuard and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard-tools resolvconf iptables dnsutils curl

      - name: Setup WireGuard VPN
        env:
          WG_PRIVATE_KEY: ${{ secrets.WG_PRIVATE_KEY }}
          WG_PRESHARED_KEY: ${{ secrets.WG_PRESHARED_KEY }}
        run: |
          echo "=== Setting up WireGuard VPN ==="
          sudo tee /etc/wireguard/wg0.conf > /dev/null <<EOF
          [Interface]
          PrivateKey = $WG_PRIVATE_KEY
          Address = 10.0.0.2/24
          DNS = 8.8.8.8

          [Peer]
          PublicKey = YOUR_SERVER_PUBLIC_KEY
          PresharedKey = $WG_PRESHARED_KEY
          Endpoint = YOUR_VPN_ENDPOINT:51820
          AllowedIPs = 0.0.0.0/0
          EOF

          sudo wg-quick up wg0
          echo "WireGuard VPN connected successfully"

          # Verify connection
          curl -s https://ipinfo.io/ip || echo "IP check failed"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        env:
          LOGIN_EMAIL: ${{ secrets.LOGIN_EMAIL }}
          LOGIN_PASSWORD: ${{ secrets.LOGIN_PASSWORD }}
          CI: true
        run: |
          echo "Running Playwright tests..."
          npx playwright test --reporter=html,github,list,json
        continue-on-error: true

      - name: Debug - Check for test results
        if: always()
        run: |
          echo "=== Checking for test results and reports ==="
          find . -name "*playwright-report*" -type d 2>/dev/null || echo "No playwright-report directories found"
          find . -name "*test-results*" -type d 2>/dev/null || echo "No test-results directories found"
          echo "=== Checking default Playwright locations ==="
          ls -la result/playwright-report/ 2>/dev/null && echo "✅ Found: result/playwright-report/" || echo "❌ No result/playwright-report/"
          ls -la result/test-results/ 2>/dev/null && echo "✅ Found: result/test-results/" || echo "❌ No result/test-results/"
          echo "=== Checking for any HTML files ==="
          find . -name "index.html" 2>/dev/null | grep -v node_modules || echo "No index.html files found"

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-results-${{ github.event.inputs.environment }}
          path: |
            result/playwright-report/
            result/test-results/
            **/*.html
            **/*.webm
            **/*.png
            **/*.zip
          retention-days: 7

      - name: Cleanup WireGuard
        if: always()
        run: |
          echo "Cleaning up WireGuard connection..."
          sudo wg-quick down wg0 || echo "WireGuard interface already down"
