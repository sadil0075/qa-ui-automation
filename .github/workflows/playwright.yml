name: Playwright + VPN

on:
  # Manual-run trigger (shows dropdown)
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: false
        type: choice
        default: "stag"
        options: [stag]
      browser:
        description: "Playwright project"
        required: false
        type: choice
        default: "chromium"
        options: [chromium]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    environment: ${{ github.event.inputs.environment || 'stag' }}

    steps:
    # â”€â”€â”€â”€â”€â”€â”€â”€â”€ source â”€â”€â”€â”€â”€â”€â”€â”€â”€
    - uses: actions/checkout@v4

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€ VPN â”€â”€â”€â”€â”€â”€â”€â”€â”€
    - name: Install WireGuard
      run: |
        sudo apt-get update -y
        sudo apt-get install -y wireguard

    - name: Start WireGuard
      env:
        WG_PRIVATE_KEY:  ${{ secrets.WG_PRIVATE_KEY }}
        WG_PUBLIC_KEY:   ${{ secrets.WG_PUBLIC_KEY }}
        WG_PRESHARED_KEY:${{ secrets.WG_PRESHARED_KEY }}
        WG_ENDPOINT:     ${{ secrets.WG_ENDPOINT }}
      run: |
        sudo mkdir -p /etc/wireguard
        printf '[Interface]\nPrivateKey = %s\nAddress = 10.0.0.10/24\nDNS = 1.1.1.1\n\n[Peer]\nPublicKey = %s\nPresharedKey = %s\nAllowedIPs = 0.0.0.0/0, ::/0\nEndpoint = %s\nPersistentKeepalive = 25\n' \
          "$WG_PRIVATE_KEY" "$WG_PUBLIC_KEY" "$WG_PRESHARED_KEY" "$WG_ENDPOINT" \
          | sudo tee /etc/wireguard/wg0.conf >/dev/null
        sudo chmod 600 /etc/wireguard/wg0.conf
        sudo wg-quick --quiet up /etc/wireguard/wg0.conf
        echo "âœ… VPN up"

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€ Node / Playwright â”€â”€â”€â”€â”€â”€â”€â”€â”€
    - uses: actions/setup-node@v4
      with:
        node-version: "lts/*"
        cache: npm

    - run: npm ci || npm install
      name: Install dependencies

    - run: npx playwright install --with-deps
      name: Install Playwright browsers

    - name: Run tests
      env:
        CI: true
        TEST_ENV: ${{ github.event.inputs.environment }}
      run: |
        if [ "${{ github.event.inputs.browser }}" = "all" ]; then
          npx playwright test
        else
          npx playwright test --project=${{ github.event.inputs.browser }}
        fi

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€ Artifacts â”€â”€â”€â”€â”€â”€â”€â”€â”€
    - name: Upload HTML report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: report-${{ github.run_number }}
        path: result/playwright-report
        retention-days: 30

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€ Teardown â”€â”€â”€â”€â”€â”€â”€â”€â”€
    - name: Disconnect WireGuard
      if: always()
      run: |
        sudo wg-quick down /etc/wireguard/wg0.conf || true
        sudo rm -f /etc/wireguard/wg0.conf
        echo "ðŸ”’ VPN down"
